apiVersion: apps/v1
kind: Deployment
metadata:
  name: minion-knowledge-graph
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.global.rollingUpdate.maxUnavailable | default 0 }}
  selector:
    matchLabels:
      service: minion-knowledge-graph
  template:
    metadata:
      labels:
        service: minion-knowledge-graph
    spec:
{{- /*
See chart value file for details of the logic used to generate this setting value below.!!!
*/}}
{{- $imagePullSecret := (ne (.Values.image.imagePullSecret | typeOf) "<nil>") | ternary .Values.image.imagePullSecret ( (ne (.Values.global.minions.image.imagePullSecret | typeOf) "<nil>") | ternary .Values.global.minions.image.imagePullSecret (  (ne (.Values.global.image.imagePullSecret | typeOf) "<nil>") | ternary .Values.global.image.imagePullSecret .Values.defaultImage.imagePullSecret )  ) -}}
      {{- if ne ($imagePullSecret | toString) "false" }}
      imagePullSecrets:
      - name: {{ $imagePullSecret }}
      {{- end }}
      volumes:
      - name: tmp-model-file-dir
        emptyDir: {}
      initContainers:
      - name: model-file-downloader
        image: "inutano/wget:1.20.3-r1"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "wget $NLP_MODEL_FILE_URI -O $NLP_MODEL_FILE_PATH"]
        env:
          - name: NLP_MODEL_FILE_URI
            value: "https://magda-files.s3-ap-southeast-2.amazonaws.com/nlp_models/en_entity_linking_wiki_03_lg.tar.gz"
          - name: NLP_MODEL_FILE_PATH
            value: "/tmp-nlp-model-dir/en_entity_linking_wiki_03_lg.tar.gz"
        volumeMounts:
          - name: tmp-model-file-dir
            mountPath: /tmp-nlp-model-dir
      containers:
      - name: minion-knowledge-graph
        image: "{{ .Values.image.repository | default .Values.global.minions.image.repository | default .Values.global.image.repository | default .Values.defaultImage.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Values.global.minions.image.tag | default .Values.global.image.tag | default .Values.defaultImage.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.minions.image.pullPolicy | default .Values.global.image.pullPolicy | default .Values.defaultImage.pullPolicy }}
{{- if .Values.global.enableLivenessProbes }}
        livenessProbe:
          httpGet:
            path: "/healthz"
            port: 6123
          initialDelaySeconds: 600
          periodSeconds: 60
          timeoutSeconds: 30
          failureThreshold: 3
          successThreshold: 1
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: NODE_PORT
          value: "6123"
        - name: REGISTRY_URL
          value: "http://registry-api/v0"
        - name: ENABLE_MULTI_TENANTS
{{- if .Values.global.enableMultiTenants }}
          value: "true"
{{- else }}
          value: "false"
{{- end }}
        - name: TENANT_URL
          value: "http://tenant-api/v0"
        - name: USER_ID
          value: {{ .Values.global.defaultAdminUserId | default .Values.defaultAdminUserId }}
        - name: INTERNAL_URL
          value: "http://minion-knowledge-graph"
        - name: NEO4J_URL
          value: {{ .Values.neo4j.url | default "" }}
        - name: NEO4J_USERNAME
          value: {{ .Values.neo4j.username | default "" }}
{{- if .Values.neo4j.password }}
        - name: NEO4J_PASSWORD
          value: {{ .Values.neo4j.password | default "" }}
{{- else }}
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: graph-db-secrets
              key: neo4j-password
{{- end }}
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: jwt-secret
        - name: NLP_MODEL_FILE_PATH
          value: "/tmp-nlp-model-dir/en_entity_linking_wiki_03_lg.tar.gz"
        volumeMounts:
          - name: tmp-model-file-dir
            mountPath: /tmp-nlp-model-dir
